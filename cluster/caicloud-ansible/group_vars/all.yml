# This value determines how kubernetes binaries, config files, and service
# files are loaded onto the target machines.

# The directory used by Ansible to temporarily store files on Ansible
# managed systems.
ansible_temp_dir: /tmp/.ansible/files

# The provider of these machines, valid options: vagrant|anchnet|aliyun|other. For
# private cloud, set this to 'other'.
host_provider: vagrant

# Name of the cluster.
cluster_name: "kube-default"

# Network implementation, valid options: flannel, calico
networking: flannel

# Network plugins configure.
# install common CNI network plugins
network_plugins_cni: true

# The infra container image name.
# pod_infra_container_image: "index.caicloud.io/caicloudgcr/google_containers_pause-amd64:3.0"

# The set of admission_controllers used in cluster.
admission_controllers: NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota

# Kubernetes internal network for services.
kube_service_addresses: 10.254.0.0/16

# Turn to false to disable logging with elasticsearch.
cluster_logging: true

# Turn to false to disable cluster monitoring with heapster and influxdb.
cluster_monitoring: true

# Turn to false to disable the kube-dash addon for this cluster.
kube_dash: true

# Turn to false to disable DNS configuration.
dns_setup: true

# Turn to false to disable kubepush
kube_push: true

# Turn to false to disable ingress
cluster_ingress: true

# Number of dns replicas.
dns_replicas: 1

# Internal DNS domain name. This domain must not be used in internal network.
# Services will be discoverable under <service-name>.<namespace>.<domainname>,
# e.g. myservice.default.svc.cluster.local.
dns_domain: "cluster.local"

# IP address of the DNS server. The IP address must be from the range specified
# as kube_service_addresses. This magic will actually pick the 100th ip address
# in the kube_service_addresses range and use that.
dns_server: "{{ kube_service_addresses|ipaddr('net')|ipaddr(100)|ipaddr('address') }}"

# Nfs server on master
nfs_server: "{{ kube_service_addresses|ipaddr('net')|ipaddr(110)|ipaddr('address') }}"
nfs_setup: false
nfs_root_dir: /exports
nfs_dirs:
  - addon-manager-mongo
  - auth-mongo
  - cds-mongo
  - console-web-mongo
  - kubernetes-admin-mongo
  - clever-admin-mongo
  - cyclone-etcd
  - cyclone-kafka
  - cyclone-mongo

# Number of replicas.
elasticsearch_replicas: 2
kibana_replicas: 1

# Define number of masters
num_masters: "{{ groups['masters'] | count }}"
# Define number of nodes (minions). There will be only one master.
num_nodes: "{{ groups['nodes'] | count }}"

# Memory requests for heapster metrics.
metrics_memory_initial: 200
metrics_memory_per_node: 4
metrics_memory: "{{ metrics_memory_initial + (metrics_memory_per_node * ((num_nodes | int) + (num_masters | int))) }}Mi"

# Memory requests for heapster eventer.
eventer_memory_initial: 200
eventer_memory_per_node: 500
eventer_memory: "{{ eventer_memory_initial + (eventer_memory_per_node * ((num_nodes | int) + (num_masters | int)) / 1024) | round | int }}Mi"

# cluster/caicloud/addons/quota.yaml.in
# dns 220Mi, es (1024+5Mi)*2, monitoring 750Mi(grafana 100, influxdb 500, mongo 100, watcher 50), heapster (400+5*n)Mi, monitoring-server (50*n)Mi, fluentd 200Mi*n, kibana 50Mi, (dashboard 50Mi)
# static pods: kube 10Mi each pod, load_balancer 20Mi
# (1024 + 512) Mi for rolling update
quota_memory: "{{ 3478 + ((num_nodes | int) + (num_masters | int)) * (205 + 50) + (num_nodes | int) * 10 + (num_masters | int) * 60 + 1024 + 512 }}Mi"
# dns 210m, es 305m*2, monitoring 300m(grafana 100, influxdb 100, mongo 50, watcher 50), heapster 200m, monitoring-server (50*n)m, fluentd 20m*n, kibana 100m, (dashboard 100m)
# static pods: apiserver 250m, controller 200m, proxy 100m, scheduler 100m, load_balancer 20m
# 400m for rolling update
# (num_nodes | int) * 100 + (num_masters | int) * 650 for kube* pods
quota_cpu: "{{ 1420+ ((num_nodes | int) + (num_masters | int)) * (20 + 50) + (num_nodes | int) * 100 + (num_masters | int) * 670 + 400 }}m"

# Used by monitoring to indicate which environment we are running on.
running_enviroment: "dev"

# These environment vars are used by monitoring and have fake default values.
# The default value are mainly used for getting us through the kube-up process
# when doing kube-up by hand (e.g. deploying caicloud stack on private cloud)
# since we don't have any real values for these env vars yet. For clusters
# brought up by caicloud stack (user clusters), these values are passed in by cds.
cluster_id: "32793e34-79d2-432b-ac17-708b61b80e6a"
cluster_token: "eSbsyAr2eDatXBxa"
caicloud_uid: "110ec58a-a0f2-4ac4-8393-c866d813b8d1"
paging_url: "http://paging.default.svc.{{ dns_domain }}:7090"
network_checker_public_host: "www.baidu.com"
network_checker_pods_num: "2"
enable_public_network: "true"

# The username/password here is used to login to kubernetes cluster.
kube_user: "admin"
kube_password: ""

#
# DO NOT CHANGE
#
# The following interfaces will be changed based on provider.
#

# The interface where kubelet, controller manager connects to apiserver. Ansible
# task will convert this to ip address; then set it to kubelet flag. Therefore,
# the address must be stable across restart.
kube_apiserver_advertise_interface: "{{ ansible_default_ipv4.interface }}"

# The interface whose address kubelet uses as its node ip.
kubelet_node_ip_interface: "{{ ansible_default_ipv4.interface }}"

# Interface on which etcd listens. Useful on systems when default interface is
# not connected to other machines; for example, in Vagrant + Virtualbox, we'll
# need to set the value to a custom interface (e.g. eth1). Note this variable
# can't be set in per-host manner with current implementation. Default value
# is ansible default interface, but ansible will change it for certain type of
# provider, e.g. vagrant.
etcd_interface: "{{ ansible_default_ipv4.interface }}"

# Interface for flannel to listen on. Default value is ansible default interface,
# but ansible will change it for certain type of provider, e.g. vagrant.
flannel_interface: "{{ ansible_default_ipv4.interface }}"

# Caicloud domain name
caicloud_app_domain: "caicloudapp.com"
caicloud_private_test_domain: "caicloudprivatetest.com"

# This directory is where all the additional config stuff goes the kubernetes
# normally puts in /srv/kubernets. This puts them in a sane location.
# Editting this value will almost surely break something. DON'T CHANGE IT.
# Things like the systemd scripts are hard coded to look in here.
kube_config_dir: "/etc/kubernetes"
kube_config_temp_dir: "{{ kube_config_dir }}/temp"

# Kubeconfig for kubectl on the control machine.
# Using kubectl_kubeconfig may be better cause kubectl_kubeconfig use ip instead of domain name.
cm_kubectl_kubeconfig: "{{ kube_config_dir }}/kubectl.cmkubeconfig"
kubectl_kubeconfig: "{{ kube_config_dir }}/kubectl.kubeconfig"

# The directory to store all addon yaml files.
kube_addons_dir: "{{ kube_config_dir }}/addons"

# This directory is where all the additional scripts go that Kubernetes normally puts
# in /srv/kubernetes.  This puts them in a sane location.
kube_script_dir: "{{ kube_config_dir}}/scripts"

# This is where all of the bearer tokens will be stored
kube_token_dir: "{{ kube_config_dir }}/tokens"

# This is where you can drop yaml/json files and the kubelet will run those
# pods on startup.
kube_manifest_dir: "{{ kube_config_dir }}/manifests"

# This is the group that the cert creation scripts chgrp the cert files to.
kube_cert_group: "kube-cert"

# The directory where binaries are stored on Ansible managed systems.
# Editting this value will almost surely break something. Things like
# the systemd scripts are hard coded to look in here.
bin_dir: /usr/bin

# Version of Kubernetes binaries.
kube_base_version: v1.4.1
kube_caicloud_version: v0.11.0
kube_version: "{{ kube_base_version }}+{{ kube_caicloud_version}}"
hyperkube_version: "{{ kube_caicloud_version }}"

download_url_base: "http://7xli2p.dl1.z0.glb.clouddn.com"
etcd_download_url_base: "{{ download_url_base }}"
flannel_download_url_base: "{{ download_url_base }}"
kube_download_url_base: "{{ download_url_base }}"
cw_download_url_base: "{{ download_url_base }}"

ensure_registry_hosts: false
registry_ip: ""
registry_prefix: "index.caicloud.io"
registry_prefix_caicloud: "{{ registry_prefix }}/caicloud"
registry_prefix_caicloudgcr: "{{ registry_prefix }}/caicloudgcr"

elasticsearch_image_elasticsearch: "{{ registry_prefix_caicloudgcr }}/google_containers_elasticsearch:1.9"
elasticsearch_image_escron: "{{ registry_prefix_caicloud }}/es-cron:v0.1.2"
fluentd_elasticsearch_image: "{{ registry_prefix_caicloudgcr }}/google_containers_fluentd-elasticsearch:1.19"
kibana_image: "{{ registry_prefix_caicloudgcr }}/google_containers_kibana:1.3"
heapster_image_heapster: "{{ registry_prefix_caicloud }}/heapster:v1.2.0-v0.0.3"
monitoring_image_influxdb: "{{ registry_prefix_caicloud }}/influxdb:1.0.0-beta2"
monitoring_image_grafana: "{{ registry_prefix_caicloud }}/monitoring-grafana:v3.1.0-withfields"
monitoring_image_watcher: "{{ registry_prefix_caicloud }}/monitoring-watcher:v1.0.1"
monitoring_image_server: "{{ registry_prefix_caicloud }}/monitoring-server:v1.0.1"
monitoring_image_network_checker_minion: "{{ registry_prefix_caicloud }}/network-checker-minion:canary"
common_image_mongo: "{{ registry_prefix_caicloud }}/mongo:3.0.5"
common_image_nginx: "{{ registry_prefix_caicloud }}/nginx:1.9.4"
kubedns_image_kubedns: "{{ registry_prefix_caicloudgcr }}/google_containers_kubedns-amd64:1.8"
kubedns_image_dnsmasq: "{{ registry_prefix_caicloudgcr }}/google_containers_kube-dnsmasq-amd64:1.4"
kubedns_image_healthz: "{{ registry_prefix_caicloudgcr }}/google_containers_exechealthz-amd64:1.2"
kubepush_image_kubepush: "{{ registry_prefix_caicloud }}/kubepush:v0.0.1"
nfs_server_image: "{{ registry_prefix_caicloud }}/nfs-server:v0.0.1"
calico_image_policy_controller: "{{ registry_prefix_caicloud }}/kube-policy-controller:v0.3.0"
calico_image_leader_elector: "{{ registry_prefix_caicloudgcr }}/leader-elector:0.4"
addon_manager_minion_image: "{{ registry_prefix_caicloud }}/addon-manager-minion:v-dev-test"
addon_manager_master_image: "{{ registry_prefix_caicloud }}/addon-manager-master:v-dev-test"
hyperkube_image: "{{ registry_prefix_caicloud }}/hyperkube:{{ hyperkube_version }}"
load_balancer_keepalived_image: "{{ registry_prefix_caicloud }}/keepalived:v1.2.19"
load_balancer_haproxy_image: "{{ registry_prefix_caicloud }}/haproxy:v1.6.5"
pod_infra_container_image: "{{ registry_prefix_caicloudgcr }}/google_containers_pause-amd64:3.0"
ingress_keepalived_image: "{{ registry_prefix_caicloud }}/ingress-keepalived-vip:v0.0.1"
ingress_nginx_image: "{{ registry_prefix_caicloud }}/nginx-ingress-controller:v0.0.1"
ingress_loadbalancer_controller_image: "{{ registry_prefix_caicloud }}/loadbalancer-controller:v0.0.1"
caicloud_self_hosted_image: "{{ registry_prefix_caicloud }}/self-hosted:v0.0.3"

# Main ports for etcd.
etcd_client_port: 2379
etcd_peer_port: 2380
etcd_events_client_port: 2381
etcd_events_peer_port: 2382

kube_apiserver_insecure_bind_address: "127.0.0.1"
kube_apiserver_insecure_bind_port:  "8080"
service_node_port_range:  "30000-32767"
cloud_config: "/etc/kubernetes/cloud-config"
kube_log_level: "0"
use_hyperkube: true

use_addon_manager: true
deploy_caicloud_stack: "false"
publish_addons: "false"
restore_addons: false
addon_manager_master_url: "http://addon-manager-master.default:8081"
addon_manager_root: "/addon-manager"
addon_manager_path: "{{ addon_manager_root }}/addons"
addon_manager_dump_path: "{{ addon_manager_root }}/dump"
generate_configmap: false

kube_cert_dir: "{{ kube_config_dir }}/certs"

load_balancer_name: "master-loadbalancer"

haproxy_config_dir:  "/etc/haproxy"
keepalived_config_dir:  "/etc/keepalived"

load_balancer_port: "443"
load_balancer_stats_port: "80"
load_balancer_default_vip: "192.168.205.253"
kube_master_api_port: "6443"
kube_scheduler_port: "10251"
kube_controller_port: "10252"

# K8S cluster operations:
#   OP_INSTALL
#   OP_UNINSTALL
#   OP_UPGRADE
#   OP_DOWNGRADE
k8s_op: ""

# Directory where extra vars json files are stored in localhost
local_dir_extra_vars_json_stored: "/tmp/.ansible/extra-vars"
# Directory where extra vars json files will be copied to remote machines
dir_extra_vars_stored: "{{ kube_config_dir }}/.ansible"

retry_ratio: 1

# Offline mode configuration
offline_mode: false
offline_cacher_ip: ""

use_aufs: false

caicloud_self_hosted: "NO"

kubernetes_provider: caicloud-baremetal
dns_host_name: cluster
base_domain_name: "{{ caicloud_private_test_domain }}"
