---
# Backup the current version.
#
# Assumed vars:
#   backup_dir

- name: Create backup directories
  file: path={{ backup_dir }}/etc_kubernetes state=directory

#
# Backup kubelet service

- name: Ubuntu | Backup kubelet service
  include: backup-upstart.yml
  vars:
    backup_service_name: "kubelet"
  when: ansible_distribution == "Ubuntu"

- name: CentOS | Backup kubelet service
  include: backup-systemd.yml
  vars:
    backup_service_name: "kubelet"
  when: ansible_distribution == "CentOS"

#
# Backup other services on master

- name: Ubuntu | Backup other services on master
  include: backup-upstart.yml
  vars:
    backup_service_name: "{{ item }}"
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kube-proxy
  when: ansible_distribution == "Ubuntu" and not use_hyperkube and inventory_hostname in groups['masters']

- name: CentOS | Backup other services on master
  include: backup-systemd.yml
  vars:
    backup_service_name: "{{ item }}"
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kube-proxy
  when: ansible_distribution == "CentOS" and not use_hyperkube and inventory_hostname in groups['masters']

#
# Backup other services on node

- name: Ubuntu | Backup other services on master
  include: backup-upstart.yml
  vars:
    backup_service_name: "{{ item }}"
  with_items:
    - kube-proxy
  when: ansible_distribution == "Ubuntu" and not use_hyperkube and inventory_hostname in groups['nodes']

- name: CentOS | Backup other services on master
  include: backup-systemd.yml
  vars:
    backup_service_name: "{{ item }}"
  with_items:
    - kube-proxy
  when: ansible_distribution == "CentOS" and not use_hyperkube and inventory_hostname in groups['nodes']

#
# Backup manifest files for use_hyperkube

- name: Create manifests directory for backup
  file: path={{ backup_dir }}/manifests state=directory
  when: use_hyperkube

- name: Backup manifest files on master
  command: "cp -f {{ kube_config_dir }}/manifests/{{ item }}.yaml {{ backup_dir }}/manifests"
  with_items:
    - hyperkube-apiserver
    - hyperkube-controller-manager
    - hyperkube-scheduler
    - hyperkube-proxy
  when: use_hyperkube and inventory_hostname in groups['masters']

- name: Backup manifest files on node
  command: "cp -f {{ kube_config_dir }}/manifests/{{ item }}.yaml {{ backup_dir }}/manifests"
  with_items:
    - hyperkube-proxy
  when: use_hyperkube and inventory_hostname in groups['nodes']

#
# Backup kubectl

- name: Create backup directory
  file: path={{ backup_dir }}/kubectl/bin state=directory

- name: Backup kubectl
  command: "cp -f {{ bin_dir }}/kubectl {{ backup_dir }}/kubectl/bin"
