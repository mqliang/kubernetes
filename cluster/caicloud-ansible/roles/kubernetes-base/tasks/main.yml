---
# Base kubernetes tasks for all masters/nodes, including:
#  - create various directories (see defaults/main.yml)
#  - write global config file
#  - download and link all kubernetes binaries
#  - generate certs and tokens
#
# Notes about configurations:
# - For upstart, components' configurations are located at /etc/default/$name; which
#   loads its configs from /etc/kubernetes/ directory.
# - For systemd, components' configurations are written directly in unit files, i.e.
#   /etc/systemd/system/$name; which also loads its configs from /etc/kubernetes/.

#
# Config time zone

- name: Update time zoneinfo
  command: "{{ item }}"
  with_items:
    - rm -f /etc/localtime
    - cp -f /usr/share/zoneinfo/{{ time_zoneinfo }} /etc/localtime

#
# Setup chrony for time synchronization

- name: Setup chrony
  include: chrony.yml

#
# Set docker container log rotation.

- name: Set docker container log rotation
  include: configure-logging.yml

#
# Disable swap.

- name: Turn off swap
  command: swapoff -a
  failed_when: false

- name: Disable swap permanently
  replace:
    dest: /etc/fstab
    regexp: '(^[^#].*\s+swap\s+.*$)'
    replace: '#\1'

#
# Make sure directories exist.

- name: Create kubernetes config directory
  file: path={{ kube_config_dir }} state=directory

- name: Create kubernetes config temp directory
  file: path={{ kube_config_temp_dir }} state=directory

- name: Create kubernetes script directory
  file: path={{ kube_script_dir }} state=directory

- name: Create kubernetes manifest directory
  file: path={{ kube_manifest_dir }} state=directory

- name: Create binary directory
  file: path={{ bin_dir }} state=directory

- name: Create the kubelet working directory
  file: path={{ kubelet_working_dir }} state=directory

# Install expect and rsync.
- name: Install expect and rsync
  package: name={{ item }} state=present
  with_items:
    - "expect"
    - "rsync"
    - "conntrack"

# Needed by kubelet/cadvisor
- name: Enable cpuacct on CentOS
  lineinfile:
    dest: /etc/systemd/system.conf
    regexp: '^#?\s*DefaultCPUAccounting=.*$'
    line: 'DefaultCPUAccounting=yes'
    state: present
  when: ansible_distribution == "CentOS"

- name: Enable memacct on CentOS
  lineinfile:
    dest: /etc/systemd/system.conf
    regexp: '^#?\s*DefaultMemoryAccounting=.*$'
    line: 'DefaultMemoryAccounting=yes'
    state: present
  when: ansible_distribution == "CentOS"

- name: Reexec daemon on CentOS
  command: systemctl daemon-reexec
  when: ansible_distribution == "CentOS"

# Needed by ha master and ingress
- name: Support ip_vs for keepalived | CentOS
  script: "ipvs/load-ipvs-centos.sh"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Support ip_vs for keepalived | Ubuntu
  script: "ipvs/load-ipvs-ubuntu.sh"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

#
# Misc preparations for bringing up cluster.

- name: Copy cloud-config to {{ kube_config_dir }}
  copy: src={{ cloud_config_dir }}/cloud-config dest={{ kube_config_dir }}/cloud-config
  when: host_provider == "aliyun" or host_provider == "anchnet"

- name: Write the global config file for all components
  template: src=config.j2 dest={{ kube_config_dir }}/config
  notify:
    - restart daemons

- name: Download and extract tar file from qiniu for all hosts
  include: qiniu.yml

- name: Install common CNI network plugins
  include: cni.yml
  when: network_plugins_cni

- name: Generate certs (or use ca-signed certs) and tokens
  include: secrets.yml

- name: Send docker config.json to all instances to pull image
  copy: src=docker-config.json dest={{ kubelet_working_dir }}/config.json
