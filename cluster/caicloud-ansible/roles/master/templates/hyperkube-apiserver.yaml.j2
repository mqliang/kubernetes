apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ hyperkube_image }}
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 250m
        # Add this because we set resourcequotas and remove limitranges
        memory: 10Mi
    command:
    - /hyperkube
    - apiserver
    - --apiserver-count={{ num_masters }}
    - --insecure-bind-address={{ kube_apiserver_insecure_bind_address }}
    - --insecure-port={{ kube_apiserver_insecure_bind_port }}
    - --bind-address={{ kube_apiserver_bind_address }}
    - --secure-port={{ kube_master_api_port }}
    - --etcd-servers={% for node in groups['etcd'] %}http://{{ hostvars[node]['internal_ip'] }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}

    - --etcd-servers-overrides={% for node in groups['etcd'] %}/events#http://{{ hostvars[node]['internal_ip'] }}:{{ etcd_events_client_port }}{% if not loop.last %},{% endif %}{% endfor %}
    
    - --service-node-port-range={{ service_node_port_range }}
    - --service-cluster-ip-range={{ kube_service_addresses }}
{% if host_provider == "aliyun" or host_provider == "anchnet" %}
    - --cloud-provider={{ host_provider }}
    - --cloud-config={{ kube_config_dir }}/cloud-config
{% endif %}
    - --admission-control={{ admission_controllers }}
    - --cors-allowed-origins=.*
    - --token-auth-file={{ kube_token_dir }}/known_tokens.csv
    - --basic-auth-file={{ kube_token_dir }}/basic-auth.csv
    - --authorization-mode=ABAC
    - --authorization-policy-file={{ kube_token_dir }}/abac.json
    - --client-ca-file={{ kube_cert_dir }}/ca.crt
    - --tls-cert-file={{ kube_cert_dir }}/server.crt
    - --tls-private-key-file={{ kube_cert_dir }}/server.key
    - --allow-privileged=true
    - --v={{ kube_log_level }}
    - --runtime-config=extensions/v1beta1/networkpolicies
    ports:
    - containerPort: {{ kube_master_api_port }}
      hostPort: {{ kube_master_api_port }}
      name: https
    - containerPort: 7080
      hostPort: 7080
      name: http
    - containerPort: {{ kube_apiserver_insecure_bind_port }}
      hostPort: {{ kube_apiserver_insecure_bind_port }}
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: etckube
      readOnly: true
    - mountPath: /etc/ssl
      name: etcssl
      readOnly: true
    - mountPath: /usr/share/ssl
      name: usrsharessl
      readOnly: true
    - mountPath: /var/ssl
      name: varssl
      readOnly: true
    - mountPath: /usr/ssl
      name: usrssl
      readOnly: true
    - mountPath: /usr/lib/ssl
      name: usrlibssl
      readOnly: true
    - mountPath: /usr/local/openssl
      name: usrlocalopenssl
      readOnly: true
    - mountPath: /etc/openssl
      name: etcopenssl
      readOnly: true
    - mountPath: /etc/pki/tls
      name: etcpkitls
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: etckube
  - hostPath:
      path: /etc/ssl
    name: etcssl
  - hostPath:
      path: /usr/share/ssl
    name: usrsharessl
  - hostPath:
      path: /var/ssl
    name: varssl
  - hostPath:
      path: /usr/ssl
    name: usrssl
  - hostPath:
      path: /usr/lib/ssl
    name: usrlibssl
  - hostPath:
      path: /usr/local/openssl
    name: usrlocalopenssl
  - hostPath:
      path: /etc/openssl
    name: etcopenssl
  - hostPath:
      path: /etc/pki/tls
    name: etcpkitls
