# Nginx configuration file serving cluster apiserver.

user  nginx;
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile     on;
  #tcp_nopush   on;

  keepalive_timeout  65;
  #gzip  on;

  # server_names_hash_bucket_size controls the maximum length of a virtual host
  # entry (the length of the domain name). Increase the parameter since we have
  # long domain names (e.g. app-provisioner.caicloud.io).
  server_names_hash_bucket_size 64;

  # Limit request rate per client IP address. We define two zones here: frontend
  # and backend. For frontend zone (used for caicloud.io, kube-ui.caicloud.io, etc),
  # we set zone size to 20 metabytes (can hold about 30 thouands clients), and set
  # rate to 10 requests per second. Backend zone has higher zone size and request
  # rate, since it's more frequently called by UI to retrieve cluster info. See
  #   http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
  # for detailed explaination about the directive.
  limit_req_zone $binary_remote_addr zone=req_frontend:20m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=req_backend:40m rate=20r/s;

  # Limit number of concurrent connections per client IP address. The number is
  # set to 200 globally (instead of per server). See:
  #   http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html
  # for detailed explaination about the directive.
  limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:20m;
  limit_conn conn_limit_per_ip 200;

  map $http_upgrade $connection_upgrade {
      ''      "";
      default upgrade;
  }

  # Default server.
  server {
    return 404;
  }

  server {
    listen 443 spdy;

    ssl on;
    ssl_certificate     /etc/nginx/ssl/master.crt;
    ssl_certificate_key /etc/nginx/ssl/master.key;

    # Burst request rate 100r/s (execessive requests will be queued up), after
    # which, 429 will be returned.
    limit_req zone=req_frontend burst=100;
    limit_req_status 429;   # codd 429 - 'Two Many Requests'

    location / {
      proxy_pass          https://{{ pillar['master_secure_location'] }}:6443;
      proxy_set_header    Host       $http_host;   # pass host
      proxy_set_header    X-Real-IP  $remote_addr; # pass on real client's IP
      proxy_read_timeout  900;
      proxy_http_version  1.1;
      proxy_set_header    Upgrade    $http_upgrade;
      proxy_set_header    Connection $connection_upgrade;
    }
  }
}
